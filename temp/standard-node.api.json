{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.5.2",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@wandyezj/standard-node!",
  "docComment": "",
  "name": "@wandyezj/standard-node",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@wandyezj/standard-node!",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@wandyezj/standard-node!equivalent:function(1)",
          "docComment": "/**\n * checks if two lists have the same values in the same order using the default comparison operator.\n *\n * @param a - a list\n *\n * @param b - a list\n *\n * @returns true if both lists have the same values in the same order.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function equivalent(a: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "equivalent"
        },
        {
          "kind": "Function",
          "canonicalReference": "@wandyezj/standard-node!removeDuplicates:function(1)",
          "docComment": "/**\n * creates list without duplicates from an original list, comparing using the default comparison operator, keeping only the first occurrence.\n *\n * @param original - list to\n *\n * @returns new list without the duplicates present in the original\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function removeDuplicates<T>(original: "
            },
            {
              "kind": "Content",
              "text": "readonly T[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "original",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "removeDuplicates"
        },
        {
          "kind": "Function",
          "canonicalReference": "@wandyezj/standard-node!removeEmpty:function(1)",
          "docComment": "/**\n * trims all strings and removes all strings that are pure whitespace from the list.\n *\n * @param original - list of strings.\n *\n * @returns a list based on the original with all strings trimmed and any empty strings removed.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function removeEmpty(original: "
            },
            {
              "kind": "Content",
              "text": "readonly string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "original",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "removeEmpty"
        }
      ]
    }
  ]
}
